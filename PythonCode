Mapping Generation

> I have three Excel files:

1. cpng_column_sample_summary.csv – Contains column names and sample values from the legacy CPNG database. It has one sheet with all tables.


2. dctrack_asset_templates.csv – Contains DC-TRACK asset structure. Each sheet represents a single asset type (e.g., DC Plant, UPS, PDU, etc.).


3. cpng_full_dump.csv – Contains complete data for all tables from the legacy CPNG system for one location (MSC = lahser). This was used to generate sample values for the first file.



Additionally, refer to cpng_relationship_notes.txt for our understanding of table relationships and mappings.

Your task:

Generate one Excel file that contains one sheet per DC-TRACK asset.

In each sheet, list:

DC-TRACK Column Name

Mapped CPNG Table Name

Mapped CPNG Column Name

Mapping status (Yes / ? / TBD)



Mapping logic to follow:

Use table name relevance (e.g., TBL_DC_PLANT likely maps to DC Plant asset sheet).

Use column name similarity or semantic meaning (e.g., VOIT maps to Voltage).

Use sample value similarity using the two CSVs: cpng_column_sample_summary.csv and dctrack_asset_templates.csv.

Use relationship notes in cpng_relationship_notes.txt to resolve joins or key links.


Start with the most obvious mappings: DC Plant, BDFB, UPS, PDU.




---

Once this mapping is done and reviewed, then you proceed with Step 2.


---

Step 2 Prompt: Data Extraction Script Generation

> Now that we have the final column mappings from CPNG to DC-TRACK assets for each sheet (from previous output), write a Python script that:

1. Accepts a DC-TRACK location name (e.g., AUBNMALG > FLR BSMT) and an asset type (e.g., DC Plant).


2. From cpng_full_dump.csv, extracts only the mapped CPNG columns relevant to that asset and location (based on previously created mapping).


3. Joins or uses related tables if necessary (based on cpng_relationship_notes.txt).


4. Saves the result as a separate CSV file named like dc_plant_AUBNMALG_FLR_BSMT.csv.



Write the script in a way that it can be reused for any asset and location combination.

You can assume the final mappings are stored in a structured CSV or Excel format per asset.




---

With this approach:

Prompt 1 completes your mappings.

Prompt 2 creates your reusable data extraction script.

Here’s a refined prompt you can use with Copilot or Google Gemini to process your Excel sheet and achieve exactly what you described — align RPPs to PDUs, correct naming, avoid creating new RPPs, identify missing PDUs, and highlight unmappable entries:


---

✅ Prompt for Copilot or Gemini:

> I’m uploading an Excel sheet that contains a list of existing RPP names and PDU names from multiple locations (54 sites) as part of a data migration to DC-Track.

Objective:

Go through each RPP name and try to match it with the corresponding PDU based on naming patterns (e.g., RPP-D2-1 likely belongs to PDU-D21).

Correct the RPP names to follow the standard format: RPP-<PDU name>1, RPP-<PDU name>2, etc., only if the RPP name suggests the matching PDU.

Do not create any new RPPs.

If you find an RPP mapped to a PDU that doesn’t exist in the list, then create the missing PDU entry with the same values as other PDUs in the site and flag it as "New PDU created."

If an RPP name is too generic (e.g., RPP-1, RPP-2) and it’s not possible to identify the correct PDU, leave the RPP name unchanged and highlight it or mark it as "Unable to map – user to correct."

Do not assume mappings just because of numeric sequence (e.g., RPP-3 ≠ PDU-3 unless supported by pattern).

Provide an output Excel sheet with:

Original RPP Name

Corrected RPP Name (if applicable)

Mapped PDU

Action Taken (e.g., Renamed, New PDU Created, Unchanged – User to Correct)

Highlight unmapped or ambiguous RPPs in a different color for user review.



Process all 54 locations in the same logic.




---

Let me know if you want a Python version of the script for local automation or if you want this formatted as a .txt file to copy-paste easily into Gemini or Copilot.


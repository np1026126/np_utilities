Thanks for the clarification ‚Äî you're right on track with the naming logic.

Let me summarize and then provide the Copilot prompt and Python logic to achieve this transformation.


---

‚úÖ Final Naming Convention Rules for RPP (to Replace Original Names)

Rule #	Condition	Action

1	If the original RPP name contains a proper PDU prefix (like C or D or B) followed by exactly 3 digits, and is in a bracket ‚Üí ‚úÖ Replace original name with the one in the bracket.	
2	If the RPP name contains only numbers like RPP1, RPP2, RPP4, i.e., no prefix letter ‚Üí ‚ùå Do NOT replace. Keep original name.	
3	If the bracketed RPP name contains an underscore or space, replace with hyphen (-) in corrected name.	
4	After RPP-<Letter>, only 3 digits allowed. So RPP-C3211 is invalid, correct it to RPP-C321.	



---

üß† Copilot Prompt to Fix RPP Names Automatically

> I have a column in Excel named Name that contains RPP names. Some of these have bracketed values like RPP1 (RPP-C311).

‚úÖ If the bracketed value follows the correct pattern of RPP-<Letter><3-digits> (e.g. RPP-C311) ‚Äî replace the original name with that.
‚ùå If the original name is like RPP1, RPP2, etc. ‚Äî and the bracket contains invalid format or too many digits (e.g. RPP-C3211), then do not use the bracket value, keep the original name.

Also, normalize all valid names using this format:
RPP-<Letter>-<3-digit number> ‚Üí i.e., ensure RPP_C321 or RPP C321 becomes RPP-C321.

Please generate a cleaned-up list with corrected RPP names in a new column called Corrected RPP Name.




---

üêç Optional Python Script Logic (if needed)

import pandas as pd
import re

# Load your Excel
df = pd.read_excel('your_file.xlsx')

def normalize_rpp(rpp_name):
    match = re.search(r'\((.*?)\)', rpp_name)
    if match:
        bracketed = match.group(1)
        # Normalize: replace space/underscore with hyphen
        bracketed = re.sub(r'[\s_]', '-', bracketed)
        # Match valid format: RPP-[A-Z][0-9]{3}
        if re.match(r'RPP-[A-Z]-\d{3}$', bracketed):
            return bracketed
    # If original name doesn't match, or bracket invalid, return original
    return rpp_name.split(' ')[0]

df['Corrected RPP Name'] = df['Name'].apply(normalize_rpp)

# Save it
df.to_excel('corrected_rpp_output.xlsx', index=False)


---

üìå What To Do:

Run this prompt in Copilot.

Provide the Excel.

Ask it to populate a Corrected RPP Name column using the logic.

If using Python, this logic can give the same output locally.


Would you like me to generate a downloadable .xlsx file based on the two screenshots you just shared and apply these transformations?


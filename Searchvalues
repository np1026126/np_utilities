@Configuration
@EnableJpaRepositories(
    basePackages = "com.verizon.c...repository",
    entityManagerFactoryRef = "coloradoEntityManagerFactory",
    transactionManagerRef = "coloradoTransactionManager"
)
@ConditionalOnProperty(name = "scheduler.mssql.enabled", havingValue = "true")
public class ColoradoDbConfig {

    @Value("${spring.datasource.colorado.url:}")
    private String url;

    @Value("${spring.datasource.colorado.username:}")
    private String username;

    @Value("${spring.datasource.colorado.password:}")
    private String password;

    @Bean
    public DataSource coloradoDataSource() {
        return DataSourceBuilder.create()
                .url(url)
                .username(username)
                .password(password)
                .driverClassName("com.microsoft.sqlserver.jdbc.SQLServerDriver")
                .build();
    }

    @Bean
    public LocalContainerEntityManagerFactoryBean coloradoEntityManagerFactory() {
        LocalContainerEntityManagerFactoryBean em = new LocalContainerEntityManagerFactoryBean();
        em.setDataSource(coloradoDataSource());
        em.setPackagesToScan("com.verizon.c...entity");
        em.setJpaVendorAdapter(new HibernateJpaVendorAdapter());
        em.setJpaProperties(getProperties());
        return em;
    }

    @Bean
    public PlatformTransactionManager coloradoTransactionManager() {
        return new JpaTransactionManager(coloradoEntityManagerFactory().getObject());
    }

    private Properties getProperties() {
        Properties props = new Properties();
        props.put("hibernate.dialect", "org.hibernate.dialect.SQLServerDialect");
        return props;
    }
}
